openapi: 3.0.0
info:
  title: Shadowrun GPT Memory API
  description: API for managing users, campaigns, sessions, and characters in Shadowrun GPT Memory.
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: string
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
  /campaigns:
    get:
      summary: Get all campaigns
      responses:
        '200':
          description: A list of campaigns
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Campaign'
    post:
      summary: Create a new campaign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '201':
          description: Campaign created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
  /campaigns/{id}:
    get:
      summary: Get a campaign by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the campaign
          schema:
            type: string
      responses:
        '200':
          description: Campaign found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '404':
          description: Campaign not found
    put:
      summary: Update a campaign by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the campaign
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
      responses:
        '200':
          description: Campaign updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '404':
          description: Campaign not found
    delete:
      summary: Delete a campaign by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the campaign
          schema:
            type: string
      responses:
        '204':
          description: Campaign deleted
        '404':
          description: Campaign not found
  /sessions:
    get:
      summary: Get all sessions
      responses:
        '200':
          description: A list of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'
    post:
      summary: Create a new session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      responses:
        '201':
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
  /sessions/{id}:
    get:
      summary: Get a session by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the session
          schema:
            type: string
      responses:
        '200':
          description: Session found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '404':
          description: Session not found
    put:
      summary: Update a session by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the session
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      responses:
        '200':
          description: Session updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '404':
          description: Session not found
    delete:
      summary: Delete a session by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the session
          schema:
            type: string
      responses:
        '204':
          description: Session deleted
        '404':
          description: Session not found
  /characters:
    get:
      summary: Get all characters
      responses:
        '200':
          description: A list of characters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Character'
    post:
      summary: Create a new character
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
      responses:
        '201':
          description: Character created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
  /characters/{id}:
    get:
      summary: Get a character by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the character
          schema:
            type: string
      responses:
        '200':
          description: Character found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character not found
    put:
      summary: Update a character by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the character
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Character'
      responses:
        '200':
          description: Character updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Character'
        '404':
          description: Character not found
    delete:
      summary: Delete a character by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the character
          schema:
            type: string
      responses:
        '204':
          description: Character deleted
        '404':
          description: Character not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
    Campaign:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        userId:
          type: string
    Session:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        date:
          type: string
          format: date-time
        campaignId:
          type: string
    Character:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        class:
          type: string
        campaignId:
          type: string